diff --git a/dist/cjs/config.js b/dist/cjs/config.js
index f79f08921cd66a0e26347b4f828c11cdf7ddb25f..be4d1062c861b5adf941d20fc6055f82d6d72451 100644
--- a/dist/cjs/config.js
+++ b/dist/cjs/config.js
@@ -82,7 +82,9 @@ async function loadConfigFile(appDirectory) {
 }
 const getTailwindConfig = ({ tailwindVersion, appDirectory, userConfig, extraConfig, designSystem }) => {
   const content = getDefaultContent(appDirectory);
-  let tailwindConfig = tailwindVersion === "3" ? {
+  const tailwindMajor = Number.parseInt(tailwindVersion, 10);
+  const useContentConfig = Number.isNaN(tailwindMajor) || tailwindMajor >= 3;
+  let tailwindConfig = useContentConfig ? {
     content
   } : {
     purge: getV2PurgeConfig(content)
diff --git a/dist/cjs/utils.js b/dist/cjs/utils.js
index 37b927d237e55967f4fb6e17a9ae66cb59c52748..728ccb8132573283d394c3b9bb56ca46bb7eca4a 100644
--- a/dist/cjs/utils.js
+++ b/dist/cjs/utils.js
@@ -22,18 +22,22 @@ __export(utils_exports, {
   getTailwindVersion: () => getTailwindVersion
 });
 module.exports = __toCommonJS(utils_exports);
-function getTailwindPath(appDirectory) {
+function resolveFromPackage(packageName, appDirectory) {
   try {
-    return require.resolve("tailwindcss", {
+    return require.resolve(packageName, {
       paths: [
         appDirectory,
         __dirname
       ]
     });
   } catch (err) {
-    return "tailwindcss";
+    return null;
   }
 }
+function getTailwindPath(appDirectory) {
+  var _a, _b;
+  return (_b = (_a = resolveFromPackage("@tailwindcss/postcss", appDirectory)) !== null && _a !== void 0 ? _a : resolveFromPackage("tailwindcss", appDirectory)) !== null && _b !== void 0 ? _b : "tailwindcss";
+}
 function getTailwindVersion(appDirectory) {
   try {
     const packageJsonPath = require.resolve("tailwindcss/package.json", {
diff --git a/dist/esm/config.js b/dist/esm/config.js
index 4fac08c138f101d6a6f4ad0a19d48511af2206ed..7289839c19adb8aa60225ca1e8e881eacb5c91b5 100644
--- a/dist/esm/config.js
+++ b/dist/esm/config.js
@@ -82,7 +82,9 @@ function _loadConfigFile() {
 var getTailwindConfig = function(param) {
   var tailwindVersion = param.tailwindVersion, appDirectory = param.appDirectory, userConfig = param.userConfig, extraConfig = param.extraConfig, designSystem = param.designSystem;
   var content = getDefaultContent(appDirectory);
-  var tailwindConfig = tailwindVersion === "3" ? {
+  var tailwindMajor = Number.parseInt(tailwindVersion, 10);
+  var useContentConfig = Number.isNaN(tailwindMajor) || tailwindMajor >= 3;
+  var tailwindConfig = useContentConfig ? {
     content
   } : {
     purge: getV2PurgeConfig(content)
diff --git a/dist/esm/utils.js b/dist/esm/utils.js
index 1b92dfd85d15008b16cebbe98c999190e69807b3..6785a5721d269068e576ec64aee8397c68c603b9 100644
--- a/dist/esm/utils.js
+++ b/dist/esm/utils.js
@@ -1,15 +1,19 @@
-function getTailwindPath(appDirectory) {
+function resolveFromPackage(packageName, appDirectory) {
   try {
-    return require.resolve("tailwindcss", {
+    return require.resolve(packageName, {
       paths: [
         appDirectory,
         __dirname
       ]
     });
   } catch (err) {
-    return "tailwindcss";
+    return null;
   }
 }
+function getTailwindPath(appDirectory) {
+  var _a, _b;
+  return (_b = (_a = resolveFromPackage("@tailwindcss/postcss", appDirectory)) !== null && _a !== void 0 ? _a : resolveFromPackage("tailwindcss", appDirectory)) !== null && _b !== void 0 ? _b : "tailwindcss";
+}
 function getTailwindVersion(appDirectory) {
   try {
     var packageJsonPath = require.resolve("tailwindcss/package.json", {
diff --git a/dist/esm-node/config.js b/dist/esm-node/config.js
index 78810749e5e7a4d05d5c235b3782994ff701b30a..20f7479071d0048e29762ba784a359b077a9cdbb 100644
--- a/dist/esm-node/config.js
+++ b/dist/esm-node/config.js
@@ -48,7 +48,9 @@ async function loadConfigFile(appDirectory) {
 }
 const getTailwindConfig = ({ tailwindVersion, appDirectory, userConfig, extraConfig, designSystem }) => {
   const content = getDefaultContent(appDirectory);
-  let tailwindConfig = tailwindVersion === "3" ? {
+  const tailwindMajor = Number.parseInt(tailwindVersion, 10);
+  const useContentConfig = Number.isNaN(tailwindMajor) || tailwindMajor >= 3;
+  let tailwindConfig = useContentConfig ? {
     content
   } : {
     purge: getV2PurgeConfig(content)
diff --git a/dist/esm-node/utils.js b/dist/esm-node/utils.js
index f50b6c3369b064532753ab8e50f29414a3f35dfb..7fc3b9a571a8c315d58c7d20c317343930dc8b75 100644
--- a/dist/esm-node/utils.js
+++ b/dist/esm-node/utils.js
@@ -1,15 +1,19 @@
-function getTailwindPath(appDirectory) {
+function resolveFromPackage(packageName, appDirectory) {
   try {
-    return require.resolve("tailwindcss", {
+    return require.resolve(packageName, {
       paths: [
         appDirectory,
         __dirname
       ]
     });
   } catch (err) {
-    return "tailwindcss";
+    return null;
   }
 }
+function getTailwindPath(appDirectory) {
+  var _a, _b;
+  return (_b = (_a = resolveFromPackage("@tailwindcss/postcss", appDirectory)) !== null && _a !== void 0 ? _a : resolveFromPackage("tailwindcss", appDirectory)) !== null && _b !== void 0 ? _b : "tailwindcss";
+}
 function getTailwindVersion(appDirectory) {
   try {
     const packageJsonPath = require.resolve("tailwindcss/package.json", {
